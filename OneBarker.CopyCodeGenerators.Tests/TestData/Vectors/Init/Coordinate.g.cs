// <auto-generated/>

using System;

namespace TestNamespace;

#nullable enable
#pragma warning disable CS0109 // the member does not hide an inherited member.
#pragma warning disable CS8602 // dereference of possible null reference.

partial record Coordinate
{
    /// <summary>
    /// Transforms the IsVector value before assigning the value to the target.
    /// </summary>
    partial void ConstructTransform_IsVector(ref bool value);

    /// <summary>
    /// Transforms the X value before assigning the value to the target.
    /// </summary>
    partial void ConstructTransform_X(ref float value);

    /// <summary>
    /// Transforms the Y value before assigning the value to the target.
    /// </summary>
    partial void ConstructTransform_Y(ref float value);

    /// <summary>
    /// Transforms the Z value before assigning the value to the target.
    /// </summary>
    partial void ConstructTransform_Z(ref float value);

    /// <summary>
    /// Method to run after the Construct method finishes copying values.
    /// </summary>
    partial void AfterConstruct(Coordinate source);

    /// <summary>
    /// Creates an instance of Coordinate with values from the provided object.
    /// </summary>
    public Coordinate(Coordinate source)
    {
        if (ReferenceEquals(null, source)) return;
        var source_IsVector = source.IsVector;
        ConstructTransform_IsVector(ref source_IsVector);
        this.IsVector = source_IsVector;
        var source_X = source.X;
        ConstructTransform_X(ref source_X);
        this.X = source_X;
        var source_Y = source.Y;
        ConstructTransform_Y(ref source_Y);
        this.Y = source_Y;
        var source_Z = source.Z;
        ConstructTransform_Z(ref source_Z);
        this.Z = source_Z;
        AfterConstruct(source);
    }

    /// <summary>
    /// Method to run after the Construct method finishes copying values.
    /// </summary>
    partial void AfterConstruct(TestNamespace.Vector3 source);

    /// <summary>
    /// Creates an instance of Coordinate with values from the provided object.
    /// </summary>
    public Coordinate(TestNamespace.Vector3 source)
    {
        if (ReferenceEquals(null, source)) return;
        var source_IsVector = source.IsVector;
        ConstructTransform_IsVector(ref source_IsVector);
        this.IsVector = source_IsVector;
        var source_X = source.X;
        ConstructTransform_X(ref source_X);
        this.X = source_X;
        var source_Y = source.Y;
        ConstructTransform_Y(ref source_Y);
        this.Y = source_Y;
        var source_Z = source.Z;
        ConstructTransform_Z(ref source_Z);
        this.Z = source_Z;
        AfterConstruct(source);
    }
}
