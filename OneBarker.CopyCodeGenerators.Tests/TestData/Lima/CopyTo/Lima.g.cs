// <auto-generated/>

using System;

namespace OneBarker.CopyCodeGenerators.Samples;

#nullable enable
#pragma warning disable CS0109  // the member does not hide an inherited member.

partial class Lima
{
    /// <summary>
    /// Transforms the Value value before assigning the value to the target.
    /// </summary>
    static partial void CopyToTransform_Value(ref int value);

    /// <summary>
    /// Method to run before the CopyTo method begins copying values.
    /// </summary>
    partial void BeforeCopyTo(OneBarker.CopyCodeGenerators.Samples.Lima2 target);

    /// <summary>
    /// Method to run after the CopyTo method finishes copying values.
    /// </summary>
    partial void AfterCopyTo(OneBarker.CopyCodeGenerators.Samples.Lima2 target);

    /// <summary>
    /// Copies properties from this object to the target object and returns the target object.
    /// </summary>
    public new Lima CopyTo(OneBarker.CopyCodeGenerators.Samples.Lima2 target)
    {
        if (ReferenceEquals(null, target)) throw new ArgumentNullException();
        BeforeCopyTo(target);
        var this_Value = this.Value;
        CopyToTransform_Value(ref this_Value);
        target.Value = this_Value;
        AfterCopyTo(target);
        return this;
    }

    /// <summary>
    /// Method to run before the CopyTo method begins copying values.
    /// </summary>
    partial void BeforeCopyTo(ref OneBarker.CopyCodeGenerators.Samples.Lima3 target);

    /// <summary>
    /// Method to run after the CopyTo method finishes copying values.
    /// </summary>
    partial void AfterCopyTo(ref OneBarker.CopyCodeGenerators.Samples.Lima3 target);

    /// <summary>
    /// Copies properties from this object to the target object and returns the target object.
    /// </summary>
    public new Lima CopyTo(ref OneBarker.CopyCodeGenerators.Samples.Lima3 target)
    {
        if (ReferenceEquals(null, target)) throw new ArgumentNullException();
        BeforeCopyTo(ref target);
        var this_Value = this.Value;
        CopyToTransform_Value(ref this_Value);
        target.Value = this_Value;
        AfterCopyTo(ref target);
        return this;
    }
}
